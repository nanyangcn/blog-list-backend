{"version":3,"sources":["components/Notification.js","components/CreateBlogForm.js","components/Toggle.js","components/BlogForm.js","components/LoginForm.js","components/Users.js","components/UserBlogs.js","components/CommentForm.js","components/Blog.js","components/Menu.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogsReducer.js","services/login.js","reducers/loggedUserReducer.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["Notification","notification","useSelector","state","message","Alert","severity","type","CreateBlogForm","handleCreateBlog","initialValues","title","author","url","onSubmit","values","setSubmitting","isSubmitting","component","TextField","label","variant","name","id","fullWidth","Button","color","startIcon","disabled","Toggle","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","displayName","BlogForm","createBlogRef","sortedBlogs","blogs","map","blog","sort","a","b","likes","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","key","scope","to","LoginForm","handleLogin","textAlign","margin","position","width","height","top","left","right","bottom","username","password","maxWidth","maxHeight","minWidth","minHeight","Users","users","user","length","UserBlogs","userSelected","find","size","CommentForm","handleCreateComment","comment","Blog","loggedUser","handleLikeClick","handleRemoveClick","removeButtonStyle","className","href","Divider","role","aria-label","comments","i","Menu","handleLogout","AppBar","Toolbar","Typography","flexGrow","baseUrl","token","getAll","axios","get","response","data","create","newObject","config","headers","Authorization","post","createComment","newComment","update","put","remove","delete","setToken","newToken","timeoutId","initialNotification","setMessageAction","sec","dispatch","clearTimeout","setTimeout","setErrorAction","reducer","action","newState","filter","loginService","newUser","App","useDispatch","history","useHistory","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","usersService","useRef","newBlog","error","likeBlogAction","confirm","removeBlogAction","push","match","useRouteMatch","params","removeItem","path","createCommentAction","current","createBlogAction","userLoggedIn","setItem","stringify","loginAction","combineReducers","blogsReducer","usersReducer","loggedUserReducer","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Container","document","getElementById"],"mappings":"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","file":"static/js/main.f016f9f4.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Alert from '@material-ui/lab/Alert'\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification)\n\n  if (notification.message) {\n    return (\n      <div>\n        <Alert severity={notification.type}>{notification.message}</Alert>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Notification\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\n\nimport Button from '@material-ui/core/Button'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\n\nconst CreateBlogForm = ({ handleCreateBlog }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ title: '', author: '', url: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleCreateBlog(values)\n          setSubmitting(false)\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <Field\n                component={TextField}\n                label='title'\n                variant='filled'\n                type='text'\n                name='title'\n                id='inputTitle'\n                fullWidth\n              />\n            </div>\n            <div>\n              <Field\n                component={TextField}\n                label='author'\n                variant='filled'\n                type='text'\n                name='author'\n                id='inputAuthor'\n              />\n            </div>\n            <div>\n              <Field\n                component={TextField}\n                label='url'\n                variant='filled'\n                type='text'\n                name='url'\n                id='inputUrl'\n                fullWidth\n              />\n            </div>\n            <Button\n              variant='contained'\n              color='primary'\n              startIcon={<CloudUploadIcon />}\n              id='createButton'\n              type='submit'\n              disabled={isSubmitting}\n            >\n              create\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nCreateBlogForm.propTypes = {\n  handleCreateBlog: PropTypes.func.isRequired,\n}\n\nexport default CreateBlogForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\n\nconst Toggle = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button variant='contained' onClick={toggleVisibility}>\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant='contained' onClick={toggleVisibility}>\n          cancel\n        </Button>\n      </div>\n      <br />\n    </div>\n  )\n})\n\nToggle.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nToggle.displayName = 'Toggle'\n\nexport default Toggle\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport CreateBlogForm from './CreateBlogForm'\nimport Toggle from './Toggle'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableHead from '@material-ui/core/TableHead'\nimport Paper from '@material-ui/core/Paper'\n\nconst BlogForm = ({ handleCreateBlog, createBlogRef }) => {\n  const blogs = useSelector((state) => state.blogs)\n\n  const sortedBlogs = blogs.map((blog) => blog)\n  sortedBlogs.sort((a, b) => b.likes - a.likes)\n\n  return (\n    <div>\n      <Toggle buttonLabel={'new blog'} ref={createBlogRef}>\n        <CreateBlogForm handleCreateBlog={handleCreateBlog} />\n      </Toggle>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Blog Title</TableCell>\n              <TableCell>Author</TableCell>\n              <TableCell>Likes</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedBlogs.map((blog) => (\n              <TableRow key={blog.id}>\n                <TableCell component='th' scope='row'>\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                </TableCell>\n                <TableCell component='th' scope='row'>\n                  {blog.author}\n                </TableCell>\n                <TableCell>{blog.likes}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default BlogForm\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport Button from '@material-ui/core/Button';\n\nconst LoginForm = ({ handleLogin }) => {\n  const loginFormStyle = {\n    textAlign: 'center',\n    margin: 'auto',\n    position: 'absolute',\n    width: '300px',\n    height: '400px',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  };\n  return (\n    <div style={loginFormStyle}>\n      <h2>Log in to application</h2>\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleLogin(values);\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <Field\n                component={TextField}\n                label='username'\n                variant='outlined'\n                id='username'\n                type='text'\n                name='username'\n              />\n            </div>\n            <br />\n            <div>\n              <Field\n                component={TextField}\n                label='password'\n                variant='outlined'\n                id='password'\n                type='password'\n                name='password'\n              />\n            </div>\n            <br />\n            <div>\n              <Button\n                id='loginButton'\n                type='submit'\n                disabled={isSubmitting}\n                variant='contained'\n                color='primary'\n                style={{\n                  maxWidth: '210px',\n                  maxHeight: '55px',\n                  minWidth: '210px',\n                  minHeight: '55px',\n                }}\n              >\n                login\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst Users = () => {\n  const users = useSelector((state) => state.users)\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>User</TableCell>\n              <TableCell>Blogs Created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => {\n              return (\n                <TableRow key={user.id}>\n                  <TableCell>\n                    <Link to={`/users/${user.id}`}>{user.name}</Link>\n                  </TableCell>\n                  <TableCell>{user.blogs.length}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst UserBlogs = ({ userSelected }) => {\n  const users = useSelector((state) => state.users)\n  if (!userSelected) {\n    return null\n  }\n\n  const user = users.find((user) => user.username === userSelected.username)\n\n  return (\n    <div>\n      <h2>{userSelected.name}</h2>\n      <TableContainer component={Paper}>\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>added blogs</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {user.blogs.map((blog) => {\n              return (\n                <TableRow key={blog.id}>\n                  <TableCell component='th' scope='row'>\n                    <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default UserBlogs\n","import React from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\n\nimport Button from '@material-ui/core/Button'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\n\nconst CommentForm = ({ blog, handleCreateComment }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ comment: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleCreateComment(blog, values)\n          setSubmitting(false)\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <Field\n                component={TextField}\n                label='new comment'\n                variant='filled'\n                fullWidth\n                type='text'\n                name='comment'\n                id='inputComment'\n              />\n              <Button\n                variant='contained'\n                color='primary'\n                startIcon={<CloudUploadIcon />}\n                id='createCommentButton'\n                type='submit'\n                disabled={isSubmitting}\n              >\n                add comment\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nexport default CommentForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\n\nimport CommentForm from './CommentForm'\n\nconst Blog = ({\n  loggedUser,\n  blog,\n  handleLikeClick,\n  handleRemoveClick,\n  handleCreateComment,\n}) => {\n  if (!blog) {\n    return null\n  }\n\n  const removeButtonStyle = {\n    display: loggedUser.username === blog.user.username ? '' : 'none',\n  }\n\n  return (\n    <div className='blog'>\n      <div>\n        <h2>\n          {blog.title} - {blog.author}\n        </h2>\n        <a href={blog.url}>{blog.url}</a>\n        <br />\n        <br />\n        <Divider />\n        <br />\n        <div>\n          added by <b>{blog.user.name} </b>\n          <Button\n            style={removeButtonStyle}\n            size='small'\n            variant='contained'\n            color='secondary'\n            startIcon={<DeleteIcon />}\n            id='removeButton'\n            onClick={() => handleRemoveClick(blog)}\n          >\n            remove\n          </Button>\n        </div>\n      </div>\n\n      <div>\n        <span className='likes'>{blog.likes} likes </span>\n        <Button\n          size='small'\n          variant='outlined'\n          color='primary'\n          id='likeButton'\n          onClick={() => handleLikeClick(blog)}\n        >\n          <span role='img' aria-label='likeIcon'>\n            &#128077;like\n          </span>\n        </Button>\n      </div>\n      <br />\n      <div>\n        <Divider />\n        <h3>comments</h3>\n        <TableContainer component={Paper}>\n          <Table size='small'>\n            <TableBody>\n              {blog.comments.map((comment, i) => (\n                <TableRow key={i}>\n                  <TableCell component='th' scope='row'>\n                    {comment}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <br />\n        <Divider />\n        <br />\n        <CommentForm blog={blog} handleCreateComment={handleCreateComment} />\n      </div>\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object,\n  handleLikeClick: PropTypes.func.isRequired,\n  handleRemoveClick: PropTypes.func.isRequired,\n}\n\nexport default Blog\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst Menu = ({ handleLogout }) => {\n  const loggedUser = useSelector((state) => state.loggedUser)\n\n  return (\n    <div>\n      <AppBar position='static'>\n        <Toolbar>\n          <Button color='inherit'>\n            <Link style={{ color: 'inherit' }} to='/'>\n              blogs\n            </Link>\n          </Button>\n          <Button color='inherit'>\n            <Link style={{ color: 'inherit' }} to='/users'>\n              users\n            </Link>\n          </Button>\n          <Typography style={{ flexGrow: 1 }} />\n          <b>{loggedUser.name}</b>\n          <Button\n            size='small'\n            variant='outlined'\n            color='secondary'\n            id='logoutButton'\n            onClick={handleLogout}\n          >\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <br />\n    </div>\n  )\n}\n\nexport default Menu\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst createComment = async (id, newComment) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  const response = await axios.post(\n    `${baseUrl}/${id}/comments`,\n    newComment,\n    config\n  )\n\n  return response.data\n}\n\nconst update = async (newObject) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  const response = await axios.put(\n    `${baseUrl}/${newObject.id}`,\n    newObject,\n    config\n  )\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\nexport default { getAll, create, createComment, update, remove, setToken }\n","let timeoutId = null\nconst initialNotification = {\n  message: null,\n  type: 'message',\n}\n\nconst reducer = (state = initialNotification, action) => {\n  switch (action.type) {\n    case 'MESSAGE': {\n      const newState = {\n        message: action.data,\n        type: 'success',\n      }\n      return newState\n    }\n    case 'ERROR': {\n      const newState = {\n        message: action.data,\n        type: 'error',\n      }\n      return newState\n    }\n    case 'RESET': {\n      return initialNotification\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const setMessageAction = (message, sec) => {\n  return async (dispatch) => {\n    clearTimeout(timeoutId)\n    dispatch({\n      type: 'MESSAGE',\n      data: message,\n    })\n    timeoutId = setTimeout(() => dispatch({ type: 'RESET' }), 1000 * sec)\n  }\n}\n\nexport const setErrorAction = (message, sec) => {\n  return async (dispatch) => {\n    clearTimeout(timeoutId)\n    dispatch({\n      type: 'ERROR',\n      data: message,\n    })\n    timeoutId = setTimeout(() => dispatch({ type: 'RESET' }), 1000 * sec)\n  }\n}\n\nexport default reducer\n","import blogService from '../services/blogs'\n\nimport { setMessageAction, setErrorAction } from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'CREATE': {\n      const newState = [...state, action.data]\n      return newState\n    }\n    case 'LIKE': {\n      const newState = state.map((blog) =>\n        blog.id === action.data.id ? action.data : blog\n      )\n      return newState\n    }\n    case 'REMOVE': {\n      const newState = state.filter((blog) => blog.id !== action.data.id)\n      return newState\n    }\n    case 'INITIALIZE_BLOG': {\n      const newState = [...action.data]\n      return newState\n    }\n    case 'CREATE_COMMENT': {\n      const newState = state.map((blog) =>\n        blog.id === action.data.id ? action.data : blog\n      )\n      return newState\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const createCommentAction = (blog, comment, loggedUser) => {\n  return async (dispatch) => {\n    try {\n      const response = await blogService.createComment(blog.id, comment)\n      response.user = {}\n      response.user.username = loggedUser.username\n      dispatch({\n        type: 'CREATE_COMMENT',\n        data: response,\n      })\n      dispatch(setMessageAction(`new comment added`, 5))\n    } catch (error) {\n      dispatch(setErrorAction(error.response.data.error, 5))\n    }\n  }\n}\n\nexport const createBlogAction = (blog, loggedUser) => {\n  return async (dispatch) => {\n    try {\n      const response = await blogService.create(blog)\n      response.user = {}\n      response.user.username = loggedUser.username\n      dispatch({\n        type: 'CREATE',\n        data: response,\n      })\n      dispatch(\n        setMessageAction(`a blog ${blog.title} by ${blog.author} added`, 5)\n      )\n    } catch (error) {\n      dispatch(setErrorAction(error.response.data.error, 5))\n    }\n  }\n}\n\nexport const likeBlogAction = (blog) => {\n  return async (dispatch) => {\n    try {\n      const newBlog = { ...blog }\n      newBlog.likes += 1\n      await blogService.update(newBlog)\n      dispatch({\n        type: 'LIKE',\n        data: newBlog,\n      })\n    } catch (error) {\n      dispatch(setErrorAction(error.response.data.error, 5))\n    }\n  }\n}\n\nexport const removeBlogAction = (blog) => {\n  return async (dispatch) => {\n    const result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n    if (result) {\n      try {\n        await blogService.remove(blog.id)\n        dispatch({\n          type: 'REMOVE',\n          data: blog,\n        })\n        dispatch(setMessageAction('blog deleted', 5))\n      } catch (error) {\n        dispatch(setErrorAction(error.response.data.error, 5))\n      }\n    }\n  }\n}\n\nexport const initialBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INITIALIZE_BLOG',\n      data: blogs,\n    })\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst loginService = async (newUser) => {\n  const response = await axios.post(baseUrl, newUser)\n  return response.data\n}\n\nexport default loginService\n","import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { setErrorAction } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN': {\n      const newState = action.data\n      return newState\n    }\n    case 'LOGOUT': {\n      return null\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const loginAction = (userLoggedIn) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService(userLoggedIn)\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        data: user,\n      })\n    } catch (error) {\n      dispatch(setErrorAction(error.response.data.error, 5))\n    }\n  }\n}\n\nexport const logoutAction = () => {\n  return (dispatch) => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    dispatch({\n      type: 'LOGOUT',\n      data: null,\n    })\n  }\n}\n\nexport const initializeLoggedUser = () => {\n  return (dispatch) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      dispatch({\n        type: 'LOGIN',\n        data: loggedUser,\n      })\n      blogService.setToken(loggedUser.token)\n    }\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getAll }\n","import usersService from '../services/users'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INITIALIZE_USERS': {\n      const newState = action.data\n      return newState\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const initializeUsersAction = () => {\n  return async (dispatch) => {\n    const response = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: response,\n    })\n  }\n}\n\nexport default reducer\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, useRouteMatch, useHistory } from 'react-router-dom'\n\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Users from './components/Users'\nimport UserBlogs from './components/UserBlogs'\nimport Blog from './components/Blog'\nimport Menu from './components/Menu'\n\nimport {\n  initialBlogs,\n  createBlogAction,\n  likeBlogAction,\n  removeBlogAction,\n  createCommentAction,\n} from './reducers/blogsReducer'\nimport {\n  initializeLoggedUser,\n  loginAction,\n  logoutAction,\n} from './reducers/loggedUserReducer'\nimport { initializeUsersAction } from './reducers/usersReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const loggedUser = useSelector((state) => state.loggedUser)\n  const users = useSelector((state) => state.users)\n  const blogs = useSelector((state) => state.blogs)\n\n  useEffect(() => {\n    dispatch(initialBlogs())\n  }, [dispatch, loggedUser])\n\n  useEffect(() => {\n    dispatch(initializeLoggedUser())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsersAction())\n  }, [dispatch, blogs])\n\n  const createBlogRef = useRef()\n\n  const handleCreateBlog = (blog) => {\n    createBlogRef.current.toggleVisibility()\n    dispatch(createBlogAction(blog, loggedUser))\n  }\n\n  const handleLikeClick = (blog) => {\n    dispatch(likeBlogAction(blog))\n  }\n\n  const handleRemoveClick = (blog) => {\n    dispatch(removeBlogAction(blog))\n    history.push('/')\n  }\n\n  const handleLogin = (userLoggedIn) => {\n    dispatch(loginAction(userLoggedIn))\n  }\n\n  const handleLogout = () => {\n    dispatch(logoutAction())\n    history.push('/')\n  }\n\n  const handleCreateComment = (blog, comment) => {\n    dispatch(createCommentAction(blog, comment, loggedUser))\n  }\n\n  let match = useRouteMatch('/users/:id')\n  const user = match ? users.find((user) => user.id === match.params.id) : null\n  match = useRouteMatch('/blogs/:id')\n  const blog = match ? blogs.find((blog) => blog.id === match.params.id) : null\n\n  if (!loggedUser) {\n    return (\n      <div>\n        <Notification />\n        <LoginForm handleLogin={handleLogin} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Menu handleLogout={handleLogout} />\n      <Notification />\n      <Switch>\n        <Route path='/users/:id'>\n          <UserBlogs userSelected={user} />\n        </Route>\n        <Route path='/users'>\n          <Users />\n        </Route>\n        <Route path='/blogs/:id'>\n          <Blog\n            loggedUser={loggedUser}\n            blog={blog}\n            handleLikeClick={handleLikeClick}\n            handleRemoveClick={handleRemoveClick}\n            handleCreateComment={handleCreateComment}\n          />\n        </Route>\n        <Route path='/'>\n          <BlogForm\n            handleCreateBlog={handleCreateBlog}\n            handleLikeClick={handleLikeClick}\n            handleRemoveClick={handleRemoveClick}\n            createBlogRef={createBlogRef}\n          />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport blogsReducer from './reducers/blogsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loggedUserReducer from './reducers/loggedUserReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  users: usersReducer,\n  loggedUser: loggedUserReducer,\n  notification: notificationReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport Container from '@material-ui/core/Container'\n\nimport App from './App'\nimport store from './store'\nimport './App.css'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Container maxWidth='lg'>\n        <App />\n      </Container>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}